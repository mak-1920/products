parameters:
    memcached.servers:
        - '%env(MEMCACHED_URL)%'
    memcached.config: {} #see https://symfony.com/doc/current/components/cache/adapters/memcached_adapter.html#available-options

    redis.server: '%env(REDIS_URL)%'
    redis.config: {} #see https://symfony.com/doc/current/components/cache/adapters/redis_adapter.html#available-options

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # make classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    file_manager.temp:
        class: 'App\Services\FilesManagers\TempFilesManager'

#>>>>>>>>>>>>>>>>> loggers >>>>>>>>>>>>>>>>>
    loggers.file:
        class: 'App\Services\Import\Loggers\FileLogger'
        arguments:
            $logger: '@monolog.logger.import'

    loggers.mail:
        class: 'App\Services\Import\Loggers\MailLogger'
#<<<<<<<<<<<<<<<<< loggers <<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>> import >>>>>>>>>>>>>>>>>
    import.reader.csv:
        alias: 'App\Services\Import\Readers\CSV\Reader'
    import.reader.statuscsv:
        alias: 'App\Services\Import\Readers\StatusOfCSV\Reader'

    import.saver.doctrine:
        class: 'App\Services\Import\Savers\Doctrine\Saver'
        arguments:
            $em: '@doctrine.orm.entity_manager'

    import.status.doctrine:
        alias: 'App\Services\Import\Statuses\DoctrineStatus'

    import.converter.doctrine:
        alias: 'App\Services\Import\Transform\Doctrine\Converter'

    import.filter.doctrine:
        alias: 'App\Services\Import\Transform\Doctrine\Filter'

    import.sender.mercure:
        alias: 'App\Services\Import\Senders\MercureSender'

    App\Services\Import\Senders\MercureSender:
        arguments:
            $status: '@import.status.doctrine'
            $producer: '@old_sound_rabbit_mq.import_send_producer'
            $logger: '@loggers.file'

    App\Command\ImportCommand:
        arguments:
            $sender: '@import.sender.mercure'
            $filesManager: '@file_manager.temp'

    App\Consumer\ImportSendConsumer:
        arguments:
            $filter: '@import.filter.doctrine'
            $converter: '@import.converter.doctrine'
            $saver: '@import.saver.doctrine'
            $status: '@import.status.doctrine'
            $filesManager: '@file_manager.temp'

#<<<<<<<<<<<<<<<<< import <<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>> memcache >>>>>>>>>>>>>>>>>
    App\Services\Cache\Memcached\MemcachedSupporter:
        arguments:
            $servers: '%memcached.servers%'
            $settings: '%memcached.config%'
#<<<<<<<<<<<<<<<<< memcache <<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>> redis >>>>>>>>>>>>>>>>>
    redis:
        class: App\Services\Cache\Redis\RedisSupporter
        arguments:
            $server: '%redis.server%'
            $settings: '%redis.config%'
        calls:
            - getClient: !returns_clone []
#<<<<<<<<<<<<<<<<< redis <<<<<<<<<<<<<<<<<

#>>>>>>>>>>>>>>>>> session >>>>>>>>>>>>>>>>>
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@redis'
            #- { 'prefix': 'my_prefix', 'ttl': 600 }
#<<<<<<<<<<<<<<<<< session <<<<<<<<<<<<<<<<<
